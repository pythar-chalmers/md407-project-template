cmake_minimum_required(VERSION 3.0)
project(md407)  

# Set Compiler & commands
set(CC arm-none-eabi-gcc)
set(LD arm-none-eabi-ld)
set(OBJCOPY arm-none-eabi-objcopy)
set(UPLOAD python upload.py)
set(GDB arm-none-eabi-gdb)

# Set Directories
set(INCLUDE_DIR include)
set(STARTUP_INC include/src/startup.h)
set(BUILD_DIR build)

# Includes
file(GLOB_RECURSE INCLUDES "${INCLUDE_DIR}/**/*.h")
include_directories(${INCLUDE_DIR})

# Compiler & linker flags
set(CMAKE_C_FLAGS "-mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -lgcc -lc_nano -Tmd407-ram.x ${EXTRA_COMPILER_OPTIONS} -nostartfiles")
list(APPEND CMAKE_C_FLAGS "-L. -L drivers/perip")
list(APPEND CMAKE_C_FLAGS " -L /usr/include/newlib/c++/9.2.1/arm-none-eabi/thumb/v6-m/nofp")
list(APPEND CMAKE_C_FLAGS " -L /usr/lib/arm-none-eabi/newlib/thumb/v6-m/nofp")
list(APPEND CMAKE_C_FLAGS " -L /usr/lib/gcc/arm-none-eabi/9.2.1/thumb/v6-m/nofp")

# Source files
file(GLOB SOURCES 
	"src/**/*.c" 
	"src/*.c"
)
list(APPEND SOURCES 
	"drivers/perip/stm32f4xx_rcc.c" 
	"drivers/perip/stm32f4xx_gpio.c"
)


# Object files
foreach(source ${SOURCES})
    get_filename_component(name ${source} NAME_WE)
    set(object "${BUILD_DIR}/${name}.o")
    list(APPEND OBJS ${object})
    add_custom_command(
        OUTPUT ${object}
        COMMAND ${CC} ${CMAKE_C_FLAGS} -c ${source} -o ${object}
        DEPENDS ${source}
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    )
endforeach()

# Output files
set(OUTPUT_BIN ${BUILD_DIR}/output.elf)
set(OUTPUT_S19 ${BUILD_DIR}/output.s19)

# Build rules
add_custom_command(
    OUTPUT ${OUTPUT_BIN}
    COMMAND ${CC} ${CMAKE_C_FLAGS} ${SOURCES} -o ${OUTPUT_BIN}
    DEPENDS ${SOURCES} ${INCLUDES} ${STARTUP_INC}
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_custom_command(
    OUTPUT ${OUTPUT_S19}
    COMMAND ${OBJCOPY} -S -O srec ${OUTPUT_BIN} ${OUTPUT_S19}
    DEPENDS ${OUTPUT_BIN}
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

# Custom target for upload
add_custom_target(upload DEPENDS ${OUTPUT_S19})
add_custom_command(
    TARGET upload
    COMMAND ${UPLOAD} ${DEV_PORT} ${OUTPUT_S19}
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

# Custom target for s19
add_custom_target(s19 DEPENDS ${OUTPUT_S19})

# Custom target for elf
add_custom_target(elf DEPENDS ${OUTPUT_BIN})

# Include dependencies (generated by GCC)
include_directories(${CMAKE_BINARY_DIR})
foreach(obj ${OBJS})
    set(dep ${obj}.d)
    if(EXISTS ${dep})
        include(${dep})
    endif()
endforeach()

# Phony targets
add_custom_target(upload-s19 DEPENDS upload)
add_custom_target(s19-all DEPENDS s19)
add_custom_target(elf-all DEPENDS elf)
